<%- include('includes/head') %>

<body class="bg-gray-100">
  <%- include('includes/nav') %>
  
  <div class="container mx-auto mt-8 px-4">
    <!-- Campo de busca para filtrar por nome -->
    <div class="flex justify-between items-center mb-4">
      <input type="text" id="searchInput" placeholder="Search by name..." class="px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:border-blue-500 w-full sm:w-1/3">
    </div>

    <!-- Mensagem de erro -->
    <% if (data.error) { %>
      <div class="bg-red-500 text-white p-4 rounded mb-4">
        <%= data.error %>
      </div>
    <% } %>

    <!-- Tabela de usuários -->
    <div class="bg-white shadow-md rounded my-6 overflow-x-auto">
      <table class="min-w-full table-auto" id="userTable">
        <thead>
          <tr class="bg-gray-200 text-gray-600 uppercase text-sm leading-normal">
            <th class="py-3 px-6 text-left">ID</th>
            <th class="py-3 px-6 text-left">Name</th>
            <th class="py-3 px-6 text-left">CPF</th>
            <th class="py-3 px-6 text-left">Email</th>
            <th class="py-3 px-6 text-left">Phone</th>
            <th class="py-3 px-6 text-left">Role</th>
            <th class="py-3 px-6 text-center">Actions</th>
          </tr>
        </thead>
        <tbody class="text-gray-600 text-sm font-light" id="userTableBody">
          <% for (let i = 0; i < data.users.length; i++) { %>
          <tr class="border-b border-gray-200 hover:bg-gray-100" data-user-row="<%= data.users[i].id %>">
            <td class="py-2 px-4 text-left whitespace-nowrap"><%= data.users[i].id %></td>
            <td class="py-2 px-4 text-left"><%= data.users[i].name %></td>
            <td class="py-2 px-4 text-left"><%= data.users[i].cpf %></td>
            <td class="py-2 px-4 text-left"><%= data.users[i].primaryEmail %></td>
            <td class="py-2 px-4 text-left"><%= data.users[i].primaryPhone %></td>
            <td class="py-2 px-4 text-left"><%= data.users[i].profile %></td>
            <td class="py-2 px-4 text-center">
              <div class="flex items-center justify-center space-x-2">
                <a href="/users/user/<%= data.users[i].id %>" class="flex items-center justify-center">
                  <img src="https://cdn-icons-png.flaticon.com/128/7542/7542177.png" alt="Details" class="w-5 h-5">
                </a>
                <a href="/users/updateUser/<%= data.users[i].id %>" class="flex items-center justify-center">
                  <img src="https://cdn-icons-png.flaticon.com/128/8669/8669717.png" alt="Update" class="w-5 h-5">
                </a>
                <% if (data.users[i].profile !== 'ADMIN') { %>
                <a href="#" class="flex items-center justify-center deleteBtn" data-user-id="<%= data.users[i].id %>">
                  <img src="https://cdn-icons-png.flaticon.com/128/3096/3096687.png" alt="Delete" class="w-5 h-5">
                </a>
                <% } %>
              </div>
            </td>
          </tr>
          <% } %>
        </tbody>
      </table>
    </div>

    <!-- Paginação e contagem -->
    <div class="flex flex-col sm:flex-row justify-between items-center mt-4">
      <span class="text-sm text-gray-600" id="entryCount">
        Showing <%= (data.currentPage - 1) * 5 + 1 %> to <%= Math.min(data.currentPage * 5, data.totalUsers) %> of <%= data.totalUsers %> entries
      </span>
      
      <nav class="inline-flex shadow-sm mt-4 sm:mt-0">
        <% if (data.currentPage > 1) { %>
          <a href="/users?page=<%= data.currentPage - 1 %>" class="px-3 py-1 bg-gray-300 text-gray-800 rounded-l-md">Previous</a>
        <% } else { %>
          <span class="px-3 py-1 bg-gray-200 text-gray-400 rounded-l-md cursor-not-allowed">Previous</span>
        <% } %>
        
        <% for (let i = 1; i <= data.totalPages; i++) { %>
          <a href="/users?page=<%= i %>" class="px-3 py-1 <%= i === data.currentPage ? 'bg-blue-500 text-white' : 'bg-gray-300 text-gray-800' %>">
            <%= i %>
          </a>
        <% } %>
        
        <% if (data.currentPage < data.totalPages) { %>
          <a href="/users?page=<%= data.currentPage + 1 %>" class="px-3 py-1 bg-gray-300 text-gray-800 rounded-r-md">Next</a>
        <% } else { %>
          <span class="px-3 py-1 bg-gray-200 text-gray-400 rounded-r-md cursor-not-allowed">Next</span>
        <% } %>
      </nav>
    </div>
  </div>

  <script>
    const searchInput = document.getElementById('searchInput');
    const userTableBody = document.getElementById('userTableBody');
    const entryCount = document.getElementById('entryCount');

    // Armazena os usuários iniciais ao carregar a página
    let initialUsers = Array.from(userTableBody.getElementsByTagName('tr')).map(row => row.outerHTML);

    function updateEntryCount() {
      const visibleRows = document.querySelectorAll('#userTableBody tr').length;
      const totalEntries = initialUsers.length;
      entryCount.textContent = `Showing 1 to ${visibleRows} of ${totalEntries} entries`;
    }

    // Função para criar o HTML da linha de usuário
    function createUserRow(user) {
      return `
        <tr class="border-b border-gray-200 hover:bg-gray-100" data-user-row="${user.id}">
          <td class="py-2 px-4 text-left whitespace-nowrap">${user.id}</td>
          <td class="py-2 px-4 text-left">${user.name}</td>
          <td class="py-2 px-4 text-left">${user.cpf}</td>
          <td class="py-2 px-4 text-left">${user.primaryEmail || ''}</td>
          <td class="py-2 px-4 text-left">${user.primaryPhone || ''}</td>
          <td class="py-2 px-4 text-left">${user.profile}</td>
          <td class="py-2 px-4 text-center">
            <div class="flex items-center justify-center space-x-2">
              <a href="/users/user/${user.id}" class="flex items-center justify-center">
                <img src="https://cdn-icons-png.flaticon.com/128/7542/7542177.png" alt="Details" class="w-5 h-5">
              </a>
              <a href="/users/updateUser/${user.id}" class="flex items-center justify-center">
                <img src="https://cdn-icons-png.flaticon.com/128/8669/8669717.png" alt="Update" class="w-5 h-5">
              </a>
              ${user.profile !== 'ADMIN' ? `
                <a href="#" class="flex items-center justify-center deleteBtn" data-user-id="${user.id}">
                  <img src="https://cdn-icons-png.flaticon.com/128/3096/3096687.png" alt="Delete" class="w-5 h-5">
                </a>` : ''}
            </div>
          </td>
        </tr>
      `;
    }

    // Função para buscar usuários conforme o valor do campo muda
    searchInput.addEventListener('keyup', function() {
      const filter = searchInput.value.toLowerCase();

      if (filter === '') {
        userTableBody.innerHTML = initialUsers.join('');
        attachDeleteEvents(); 
        updateEntryCount(); 
        return;
      }

      const url = `/users/search?name=${encodeURIComponent(filter)}`;

      fetch(url)
        .then(response => response.json())
        .then(data => {
          userTableBody.innerHTML = '';
          if (data.users.length > 0) {
            data.users.forEach(user => {
              userTableBody.innerHTML += createUserRow(user);
            });
            attachDeleteEvents(); 
          } else {
            userTableBody.innerHTML = `
              <tr>
                <td colspan="7" class="text-center py-4">No users found</td>
              </tr>
            `;
          }
          updateEntryCount(); 
        })
        .catch(error => console.error('Erro ao buscar usuários:', error));
    });

    // Função para anexar eventos aos botões de exclusão
    function attachDeleteEvents() {
      const deleteBtns = document.querySelectorAll(".deleteBtn");
      deleteBtns.forEach(btn => {
        btn.addEventListener('click', function(event) {
          event.preventDefault();
          const userId = btn.getAttribute("data-user-id");
          
          Swal.fire({
            title: 'Tem certeza?',
            text: "Você não poderá reverter isso!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Sim, excluir!',
            cancelButtonText: 'Cancelar'
          }).then((result) => {
            if (result.isConfirmed) {
              fetch(`/users/deleteUser/${userId}`, {
                method: 'DELETE'
              })
              .then(response => response.json())
              .then(data => {
                if (data.success) {
                  Swal.fire('Excluído!', 'O usuário foi excluído com sucesso.', 'success');
                  document.querySelector(`[data-user-row="${userId}"]`).remove();
                  initialUsers = initialUsers.filter(row => !row.includes(`data-user-row="${userId}"`));
                  updateEntryCount(); 
                } else {
                  Swal.fire('Erro!', data.error || 'Houve um problema ao excluir o usuário.', 'error');
                }
              })
              .catch(error => {
                Swal.fire('Erro!', 'Houve um problema ao excluir o usuário.', 'error');
                console.error('Erro ao excluir usuário:', error);
              });
            }
          });
        });
      });
    }

    attachDeleteEvents();
    updateEntryCount();
  </script>
</body>
</html>
